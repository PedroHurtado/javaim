1. Autenticación
    User y pwd(bcript)
    Oauth (IDP)

1.1 Cookies
    set cookie 1234567890, httpOnly, secure
    HttpOnly->document.cookie no la devulve(xss)
    Secure->https

    Request
        cookie

1.2 Token
    jwt
    headers:{
        'Authorization': 'bearer 1323456666'
    }  
    ¿Donde guardas el token?

    LocalStorage

    1. Requiere serialización y deserializacion de objetos 
    2. Los accesos al local storage son sincronos
    3. No es accesible desde los worker(pwa)

    IndexDb

    1. Tiene serialización y deserializacion nativa
    2. Los accesos son asincronos
    3. Trabaja desde el hijo principal y los workers


    ¿Como me protejo ante un ataque xss?

    https://www.w3.org/TR/CSP3/

Oauth

    IDP->IDentiti provider

    1 Solo usuario y una sola contraseña

    Google
    Twitter
    Faceebock
    Linkedin
    Microsof


    1. Registras en el idp

        url
        redirect_uri

        client_id
        client_secret
    2. Formulario
        <button type="submit">Login con Google</button>

        GET https://github.com/login/oauth/authorize

        client_id
        redirect_url
        scope

        redirect
    3. Redirect 
        http://localhost:8080/login/github?code=45679899999999

    4. Server to Server
        POST https://github.com/login/oauth/access_token

        code,
        client_id
        client_secret
        scope
        redirect_url

        Accept: application/json
    {
    "access_token":"gho_16C7e42F292c6912E7710c838347Ae178B4a",
    "scope":"repo,gist",
    "token_type":"bearer"
    }

    El tokem que envia el idp no te vale para autenticar

    5. Authorization: Bearer OAUTH-TOKEN
    GET https://api.github.com/user

    6. guardas en tu bb.dd el usuario
    7. Generas un jwt o una cookie


1. El token debe de tener una vida corta->3600
2. Debe de tener un endpoint refresh

jwt

const parts = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30'.split('.')

const header = atob(parts[0])
const claims = atob(parts[1])

atob(parts[2]) //error